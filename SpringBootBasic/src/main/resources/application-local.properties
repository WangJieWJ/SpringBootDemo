# 本地环境的配置文件

# 可以查看当前项目中已启用 和 未启用的自动配置的报告
# debug=true

# RedisProperties
# Redis服务器索引(默认为0)
spring.redis.database=0
spring.redis.host=127.0.0.1
# Redis服务器连接密码
# spring.redis.passworld= 未设置密码，可在Windows.conf中来配置  requirepass即可
# Redis服务器连接端口
spring.redis.port=6379
# 线程池中的最大空闲连接
spring.redis.pool.max-idle=100
# 线程池中的最小空闲连接
spring.redis.pool.min-idle=1
# 连接池最大连接数(使用负值表示没有限制)
spring.redis.pool.max-active=1000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1


# JDBCProperties  (MySQL)  因为高版本的MySQL需要显示的关闭userSSL连接
# 主库
spring.datasource.master.url=jdbc:mysql://localhost:3306/test??useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.datasource.master.username=root
spring.datasource.master.password=MySQL_1234
spring.datasource.master.driverClassName=com.mysql.jdbc.Driver

# 从库
spring.datasource.slave.url=jdbc:mysql://localhost:3306/test??useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.datasource.slave.username=root
spring.datasource.slave.password=MySQL_1234
spring.datasource.slave.driverClassName=com.mysql.jdbc.Driver

# 使用JPA来进行操作  可以使用上面的
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.show-sql = true

# 日志设置
# 多彩输出  如果你的终端支持ANSI，设置彩色输出会让日志更具可读性。通过在application.properties中设置spring.output.ansi.enabled参数来支持。
# NEVER 禁用ANSI-colored输出（默认项）
# DETECT 会检查终端是否支持ANSI，是的话就采用彩色输出（推荐项）
# ALWAYS 总是使用ANSI-colored格式输出，若终端不支持的时候，会有很多干扰信息，不推荐使用
spring.output.ansi.enabled=DETECT
logging.pattern.console=%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n
logging.pattern.file=%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n

# 来注册自定义的监听器
context.listener.classes=com.springbootbasic.mylistener.ApplicationListenerStartup